const langText = {
    captureImage: "Capture image of page.",
    noCollectionsTitle: "It looks like there are no collections yet!",
    whatAreCollections: "What are collections?",
    collectionDetails: `Collections help in managing and utilising WARC files efficiently, allowing researchers, archivists, and others to 
    focus on specific sets of data that are relevant to their interests or studies. Collections can also facilitate the 
    sharing of data between different parties interested in the same sets of archived web content.`,
    createCollection: "Create Collection",
    importWarc: "Import WARC",
    collections: "Collections",
    editCollectonMeta: "Edit this collection's metadata.",
    deleteCollecton: "Delete this collection.",
    newRecording: "New Recording",
    exportWarc: "Export WARC",
    size: "Size",
    resources: "Resources",
    pages: "Pages",
    save: "Save",
    cancel: "Cancel",
    recordingTitle:"Recording Title",
    collectionDescription: "Collection Description",
    collectionName: "Collection Name",
    sureCancelCollection: "Are you sure you wish to delete the collection",
    delete: "Delete",
    edit: "Edit",
    record: "Record",
    browse: "Browse",
    sureDeleteRecording: "Are you sure you wish to delete the Recording?",
    titleRequired: "Title is required",
    importWarcFile: "Import WARC file",
    creatANewCollection: "Create a new collection.",
    filterCollections: "Filter Collections",
    exporting: "Exporting",
    exportingRecording: "Exporting Recording",
    importing: "Importing",
    startingImport: "Starting Import",
    noRecordings: "It looks like there are no recordings",
    whatIsRecording: "A recording refers to a single, complete capture of a web resource at a specific point in time. Each recording in a WARC file consists of one or more records, where each record captures a different aspect or component of the web resource.",
    createRecording: "Create Recording",
    workingOnIt: "I'm working on it!!",
    nothingToSee: "Nothing to see here",
    ok: "OK",
    resume: "Resume",
    pause: "Pause",
    crawlUnderway: "Crawl Underway!",
    pagesCrawled: "Pages Crawled",
    stop: "Stop",
    stopCrawl: "Are you sure you want to stop this crawl?",
    crawlComplete: "Crawl Complete!",
    newCrawl: "New Crawl",
    pleaseBrowse: "Please browse to the page you would like the spider to start from.",
    limitSiteDepth: "Limit Site Depth",
    limitSiteDepthHelp: "Should the spider limit the depth it crawls the site to?",
    siteCrawlDepth: "Site Crawl Depth",
    siteCrawlDepthHelp: "How deep should the spider crawl the site?",
    externalcrawlDepth: "External Crawl Depth",
    externalcrawlDepthHelp: "Should we follow links off site, if so how deep?",
    autoScroll: "Auto Scroll",
    autoScrollHelp: "Do you want the page to scroll? Useful to capture infinite scroll and lazy-loading images.",
    scrollDelay: "Scroll Delay (ms)",
    scrollDelayHelp: "The speed of the scroll, lower values mean faster scrolling",
    requestDelay: "Request Delay (ms)",
    requestDelayHelp: "The time to wait before requesting the next page once the current page is finished processing.",
    pageTimeout: "Page Timeout (ms)",
    pageTimeoutHelp: "How long should we wait for the page to finish before skipping to the next?",
    ignoreFragmentIds: "Ignore Fragment Identifiers",
    ignoreFragmentIdsHelp: "Should we ignore URLs with hashes? Normally fine, but they may need to be followed from some dynamic sites.",
    listofExclusion: "List of Exclusions",
    listofExclusionHelp: "Each line will be checked and if it is contained within the URL then it will be skipped",
    startCrawl: "Start Crawl",
    autoMagicSpider: "Auto Magic Spider",
    noHostSet: "No host set",
    recording: "Recording",
    pagesCaptured: "Pages Captured",
    resourcesCaptured: "Resources Captured",
    captureSize: "Capture size",
    sureLeaveRecording: "Are you sure you want to leave this recording? All crawling will stop.",
    filterKeywords: "Filter Keyword",
    images: "Images",
    video: "Video",
    audio: "Audio",
    PDF: "PDF",
    all: "All",
    importComplete: "Importing Complete",
    importingRecords: "Importing Records",
    unzippingWarc: "Unzipping WARC",
    proxyError: "Proxy Error",
    unexpectedError: "An unexpected error occured",
    notFound: "Not Found",
    pageNotInArchive: "The page cannot be found in the archive",
    back: "Back"
}

export function __(key){
    return langText[ key ];
}